@page "/doctors"
@inject DoctorService DoctorService

<h1>Doctors</h1>

@if (doctors == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button @onclick="@(() => CreateClick())" @onclick:stopPropagation="true" class="btn btn-primary">
        Add
    </button>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var doctor in doctors)
            {
                <tr>
                    <td>@doctor.Id</td>
                    <td>@doctor.Name</td>
                    <td>
                        <button @onclick="@(() => EditClick(doctor.Id))" @onclick:stopPropagation="true" class="btn btn-primary">
                            Edit
                        </button>

                        <button @onclick="@(() => DeleteClick(doctor.Id))" @onclick:stopPropagation="true" class="btn btn-danger">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<BlazorShared.Models.Doctor.DoctorDto> doctors = new List<BlazorShared.Models.Doctor.DoctorDto>();

    protected override async Task OnInitializedAsync()
    {
        await ReloadData();
    }

    private async Task CreateClick()
    {

    }

    private async Task EditClick(int id)
    {

    }

    private async Task DeleteClick(int id)
    {
        await DoctorService.Delete(id);
        await ReloadData();
    }

    private async Task ReloadData()
    {
        doctors = await DoctorService.List();
    }
}
